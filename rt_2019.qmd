# Ước tính Rt của Sởi năm 2019

## Serial interval

-   Dữ liệu hiện có không thể tính được Serial interval theo định nghĩa. Do đó, sẽ dựa vào y văn và chọn Serial interval có trung bình là **14.5 ngày** và độ lệch chuẩn là **3.25 ngày** [@worden2020d].

## Ước tính Rt

```{r}
#| warning: false
#| message: false

library(readxl)
library(EpiEstim)
library(ggplot2)
library(dplyr)
library(janitor)
library(tidyr)
library(knitr)
library(lubridate)

df <- read_xlsx("C:/Users/Admin/Desktop/modelling/data/linelist_measles_hcmc.xlsx", sheet = "DS 2013-2023")
df <- as.data.frame(df)
head(df)
```

**Clean data**

```{r}
df <- df %>% clean_names()
df <- df %>% rename(dates = x0_ngaynv)
df <- df[,c("dates", "stt")]
df_convert <- df %>% group_by(dates) %>% 
  summarise(I = n())

df_complete <- df_convert %>%
    complete(dates = seq(min(dates), max(dates), by = "day")) %>%
    replace_na(list(I = 0))

df_complete$dates <- as.Date(df_complete$dates)
```

**Ước tính hệ số lây nhiễm Rt**

-   Bộ dữ liệu bao gồm danh sách ca bệnh từ **2013 - 2023**. Sử dụng **ngày khởi phát** để ước tính ***Rt*** .

```{r}
ggplot(df_complete, aes(x = dates, y = I)) +
    geom_histogram(stat = "identity", binwidth = 1, width = 1, fill = "lightgrey", color = "black") +
    labs(x = "Day", y = "Incidence", title = "2013 - 2023") +
    theme_minimal() + 
    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 8)) + 
    scale_x_date(date_labels = "%b %Y", date_breaks = "3 month")
```

-   Chúng ta sẽ ước tính ***R~t~*** cho năm 2019, theo dữ liệu thì dịch Sởi năm 2019 bắt đầu tăng liên tục từ **tháng 09/2018**, do đó chúng ta thử ước tính ***R~t~*** từ **tháng 09/2018** đến **tháng 03/2020**.

```{r}
df_filter <- filter(df_complete, dates >= "2018-09-01" & dates <= "2020-03-31")
```

```{r}
t_start <- seq(2, nrow(df_filter)-13)
t_end <- t_start + 13

mod <- estimate_R(
  incid = df_filter, # Dữ liệu từ 01/09/2018 đến 03/2020
  method = "parametric_si", 
  config = make_config(
    list(
      mean_si = 14.5, 
      std_si = 3.25
    )
  )
)

df_rt <- mod$R
df_rt$dates <- mod$dates[df_rt$t_end]
df_rt$q1_rt <- df_rt$`Quantile.0.025(R)`
df_rt$q3_rt <- df_rt$`Quantile.0.975(R)`
df_rt$rt <- df_rt$`Mean(R)`
```

```{r}
library(patchwork)

p_hist <- ggplot(df_filter, aes(x = dates, y = I)) +
    geom_histogram(stat = "identity", binwidth = 1, width = 1, fill = "lightgrey", color = "black") +
    labs(x = "Day", y = "Incidence") +
    theme_minimal() + 
    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 8)) + 
    scale_x_date(date_labels = "%b %Y", date_breaks = "1 month", limits = c(ymd("2018-09-01"), ymd("2020-03-31")))

p <- ggplot(df_rt, aes(x = dates)) +
  geom_ribbon(aes(ymin = q1_rt, ymax = q3_rt), fill = "lightcoral", alpha = 0.3) + 
  geom_line(aes(y = rt), color = "darkorange") +
  geom_hline(yintercept = 1, linetype = "dashed", color = "black") + 
  labs(x = "Day", y = "Rt", title = "01/09/2018 - 31/03/2020") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 8)) +
  scale_x_date(date_labels = "%b %Y", date_breaks = "1 month", limits = c(ymd("2018-09-01"), ymd("2020-03-31"))) +
  scale_y_continuous(limits = c(0, 20))

p_hist / p
```

-   ***R~t~*** ước tính được tương tự như năm 2024, giá trị ***R~t~*** lúc mới bắt đầu dịch rất cao và có khoảng tin cậy 95% khá lớn, do đó chúng ta thử hiệu chỉnh thời gian bắt đầu dữ liệu để ước tính ***R~t~*** để tìm ra được thời điểm thích hợp.

```{r}
df_filter_2 <- filter(df_complete, dates >= "2018-09-08" & dates <= "2020-03-31")
```

```{r}
t_start <- seq(2, nrow(df_filter)-13)
t_end <- t_start + 13

mod_2 <- estimate_R(
  incid = df_filter_2, # Dữ liệu từ 08/09/2018 đến 03/2020
  method = "parametric_si", 
  config = make_config(
    list(
      mean_si = 14.5, 
      std_si = 3.25
    )
  )
)

df_rt_2 <- mod_2$R
df_rt_2$dates <- mod_2$dates[df_rt_2$t_end]
df_rt_2$q1_rt <- df_rt_2$`Quantile.0.025(R)`
df_rt_2$q3_rt <- df_rt_2$`Quantile.0.975(R)`
df_rt_2$rt <- df_rt_2$`Mean(R)`
```

```{r}
library(patchwork)

p_hist_2 <- ggplot(df_filter_2, aes(x = dates, y = I)) +
    geom_histogram(stat = "identity", binwidth = 1, width = 1, fill = "lightgrey", color = "black") +
    labs(x = "Day", y = "Incidence") +
    theme_minimal() + 
    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 8)) + 
    scale_x_date(date_labels = "%b %Y", date_breaks = "1 month", limits = c(ymd("2018-09-08"), ymd("2020-03-31")))

p_2 <- ggplot(df_rt_2, aes(x = dates)) +
  geom_ribbon(aes(ymin = q1_rt, ymax = q3_rt), fill = "lightcoral", alpha = 0.3) + 
  geom_line(aes(y = rt), color = "darkorange") +
  geom_hline(yintercept = 1, linetype = "dashed", color = "black") + 
  labs(x = "Day", y = "Rt", title = "08/09/2018 - 31/03/2020") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 8)) +
  scale_x_date(date_labels = "%b %Y", date_breaks = "1 month", limits = c(ymd("2018-09-08"), ymd("2020-03-31"))) +
  scale_y_continuous(limits = c(0, 20))

p_hist_2 / p_2
```
