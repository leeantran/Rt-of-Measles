# Quận 8

```{r}
library(readxl)
library(EpiEstim)
library(ggplot2)
library(dplyr)
library(janitor)
library(tidyr)
library(knitr)
library(lubridate)
```

**Quận 8**
**Clean data**
```{r}
df1 <- read_xlsx("C:/Users/Admin/Desktop/measles/data/data.xlsx", sheet = "data")
df1 <- as.data.frame(df1)


df_quan8 <- filter(df1, QH_TH == "Quận 8")

df_quan8 <- df_quan8 %>% clean_names()

df_quan8 <- df_quan8 %>% rename(dates = ngay_khoi_phat,
                    ngaysinh = ngay_sinh,
                    ngaynv = ngay_nhap_vien_kham,
                    tiemchung = tinh_trang_tiem_chung,
                    gioi = gioi_tinh)

sum(is.na(df_quan8$dates))
```

-   Có 18 ca bị missing **Ngày khởi phát** nên sử dụng **Ngày nhập viện** thay thế cho những ca này

```{r}
# Lấy ngày nhập viện thay cho ngày khởi phát của các ca missing
df_quan8$dates[is.na(df_quan8$dates)] <- df_quan8$ngaynv[is.na(df_quan8$dates)]
sum(is.na(df_quan8$dates))
```


```{r}
df_quan8$cd <- ifelse(df_quan8$phan_loai_chan_doan == "Loại trừ sởi", NA, df_quan8$phan_loai_chan_doan)
df_quan8 <- df_quan8[,c("dates", "ngaysinh", "tiemchung", "cd")]

# Loại những ca Sởi loại trừ
df_quan8 <- na.omit(df_quan8)

# Nhóm dữ liệu theo ngày
df_quan8_convert <- df_quan8 %>% group_by(dates) %>% 
  summarise(I = n())

# Sắp xếp lại theo ngày
df_quan8_complete <- df_quan8_convert %>%
    complete(dates = seq(min(dates), max(dates), by = "day")) %>%
    replace_na(list(I = 0))

df_quan8_complete$dates <- as.Date(df_quan8_complete$dates)
```

**Ước tính hệ số lây nhiễm R~t~**

-   Bộ dữ liệu bao gồm những ca Sởi xác định (Sởi lâm sàng + Sởi xét nghiệm dương tính) từ ngày **04/03/2024** đến **14/09/2024**. Sử dụng ***ngày khởi phát*** để ước tính ***R~t~*** .
```{r}
mod_raw <- estimate_R(
  incid = df_quan8_complete, # Dữ liệu từ 04/03/2024 - end
  method = "parametric_si", 
  config = make_config(
    list(
      mean_si = 14.5, 
      std_si = 3.25
    )
  )
)
```

```{r}
df_quan8_rt_raw <- mod_raw$R
df_quan8_rt_raw$dates <- mod_raw$dates[df_quan8_rt_raw$t_end]
df_quan8_rt_raw$q1_rt <- df_quan8_rt_raw$`Quantile.0.025(R)`
df_quan8_rt_raw$q3_rt <- df_quan8_rt_raw$`Quantile.0.975(R)`
df_quan8_rt_raw$rt <- df_quan8_rt_raw$`Mean(R)`
```

```{r}
library(patchwork)

p_hist_raw <- ggplot(df_quan8_complete, aes(x = dates, y = I)) +
    geom_histogram(stat = "identity", binwidth = 1, width = 1, fill = "lightgrey", color = "black") +
    labs(x = "Day", y = "Incidence") +
    theme_minimal() + 
    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 8)) + 
    scale_x_date(date_labels = "%b %d", date_breaks = "1 week", limits = c(ymd("2024-03-04"), ymd("2024-09-14")))

p_raw <- ggplot(df_quan8_rt_raw, aes(x = dates)) +
  geom_ribbon(aes(ymin = q1_rt, ymax = q3_rt), fill = "lightcoral", alpha = 0.3) + 
  geom_line(aes(y = rt), color = "darkorange") +
  geom_hline(yintercept = 1, linetype = "dashed", color = "black") + 
  labs(x = "Day", y = "Rt", title = "04/03/2024 - 14/09/2024") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 8)) +
  scale_x_date(date_labels = "%b %d", date_breaks = "1 week", limits = c(ymd("2024-03-04"), ymd("2024-09-14"))) +
  scale_y_continuous(limits = c(0, 20))

p_hist_raw/p_raw
```

-   Khi ước tính ***R~t~*** từ 04/03/2024 thì có thể là quá sớm vì các ca bệnh xuất hiện lẻ tẻ từ 04/03/2024 đến khoảng 30/05/2024. Số ca bệnh bắt đầu xuất hiện **liên tục** từ 30/05/2024 nên sẽ ước tính ***Rt*** từ ngày này. Do đó, ***R~t~*** sẽ được ước tính từ **30/05/2024** đến **14/09/2024**.

```{r}
# Lọc dữ liệu từ 30/05/2024 - end
df_quan8_filter <- filter(df_quan8_complete, dates >= "2024-05-30")
```

```{r}
mod_1w <- estimate_R(
  incid = df_quan8_filter, 
  method = "parametric_si", 
  config = make_config(
    list(
      mean_si = 14.5, 
      std_si = 3.25
    )
  )
)
# Lấy dữ liệu ra để vẽ Rt
df_rt_1w_quan8 <- mod_1w$R
df_rt_1w_quan8$dates <- mod_1w$dates[df_rt_1w_quan8$t_end]
df_rt_1w_quan8$q1_rt <- df_rt_1w_quan8$`Quantile.0.025(R)`
df_rt_1w_quan8$q3_rt <- df_rt_1w_quan8$`Quantile.0.975(R)`
df_rt_1w_quan8$rt <- df_rt_1w_quan8$`Mean(R)`
```

-   Trong lệnh `esimate_R`, chúng ta có thể tùy chọn ***Sliding window (SW)*** khác nhau để thể hiện kết quả ước tính ***R~t~***. ***Sliding window*** là khoảng thời gian chúng ta dùng để xác định ***R~t~***, ví dụ nếu chúng ta chọn ***SW = 7*** thì giá trị ***R~t~*** sẽ được tính bằng trung bình của 7 ngày. Chúng ta chọn ***SW*** mỗi 2 tuần.

```{r}
# SW = 14
t_start <- seq(2, nrow(df_quan8_filter)-13)
t_end <- t_start + 13

mod_2w <- estimate_R(
  incid = df_quan8_filter, 
  method = "parametric_si", 
  config = make_config(
    list(
      mean_si = 14.5, 
      std_si = 3.25,
      t_start = t_start,
      t_end = t_end
    )
  )
)

# Lấy dữ liệu ra để vẽ Rt
df_rt_2w_quan8 <- mod_2w$R
df_rt_2w_quan8$dates <- mod_2w$dates[df_rt_2w_quan8$t_end]
df_rt_2w_quan8$q1_rt <- df_rt_2w_quan8$`Quantile.0.025(R)`
df_rt_2w_quan8$q3_rt <- df_rt_2w_quan8$`Quantile.0.975(R)`
df_rt_2w_quan8$rt <- df_rt_2w_quan8$`Mean(R)`
```

```{r}
library(patchwork)

# Biểu đồ đường cong dịch
p_hist <- ggplot(df_quan8_filter, aes(x = dates, y = I)) +
    geom_histogram(stat = "identity", binwidth = 1, width = 1, fill = "lightgrey", color = "black") +
    labs(x = "Day", y = "Incidence") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 8)) + 
    scale_x_date(date_labels = "%b %d", date_breaks = "1 week", limits = c(ymd("2024-05-30"), ymd("2024-09-14")))


# Biểu đồ cho 2 tuần
p_2w <- ggplot(df_rt_2w_quan8, aes(x = dates)) +
  geom_ribbon(aes(ymin = q1_rt, ymax = q3_rt), fill = "lightcoral", alpha = 0.3) + 
  geom_line(aes(y = rt), color = "darkorange") +
  geom_hline(yintercept = 1, linetype = "dashed", color = "black") + 
  labs(x = "Day", y = "Rt", title = "2 Week") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 8)) + 
  scale_x_date(date_labels = "%b %d", date_breaks = "1 week", limits = c(ymd("2024-07-22"), ymd("2024-09-14"))) +
  scale_y_continuous(limits = c(0, 6))+
   annotate("text", x = ymd("2024-08-30"), y = 6, label = "Chiến dịch tiêm sởi", hjust = 0.1, size = 4) +
  annotate("text", x = ymd("2024-09-01"), y =5, label = "31/08/2024", hjust = 0.2,size = 3) +
  annotate("segment", x = ymd("2024-08-31"), xend = ymd("2024-08-31"), y = 4, yend = 2, 
           arrow = arrow(type = "closed", length = unit(0.2, "cm")), color = "blue")
p_hist/p_2w
```


```{r}
p_hist <- ggplot(df_quan8_filter, aes(x = dates, y = I)) +
    geom_histogram(stat = "identity", binwidth = 1, width = 1, fill = "lightgrey", color = "black") +
    labs(x = "Day", y = "Incidence") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 8)) + 
    scale_x_date(date_labels = "%b %d", date_breaks = "1 week", limits = c(ymd("2024-05-30"), ymd("2024-09-14")))

p_2w <- ggplot(df_rt_2w_quan8, aes(x = dates)) +
  geom_ribbon(aes(ymin = q1_rt, ymax = q3_rt), fill = "lightcoral", alpha = 0.3) + 
  geom_line(aes(y = rt), color = "darkorange") +
  geom_hline(yintercept = 1, linetype = "dashed", color = "black") + 
  labs(x = "Day", y = "Rt", title = "22/07 - 14/09") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) + 
  scale_x_date(date_labels = "%b %d", date_breaks = "1 week", limits = c(ymd("2024-07-22"), ymd("2024-09-14"))) +
  scale_y_continuous(limits = c(0, 6)) +
  annotate("text", x = ymd("2024-08-30"), y = 6, label = "Chiến dịch tiêm sởi", hjust = 0.1, size = 4) +
  annotate("text", x = ymd("2024-09-01"), y =5, label = "31/08/2024", hjust = 0.2,size = 3) +
  annotate("segment", x = ymd("2024-08-31"), xend = ymd("2024-08-31"), y = 4, yend = 2, 
           arrow = arrow(type = "closed", length = unit(0.2, "cm")), color = "blue")
p_hist/p_2w
```